===== Config file =====
[gcode_shell_command hello_world]
command = echo hello world
timeout = 2.
verbose = True

[gcode_macro HELLO_WORLD]
gcode = 
	RUN_SHELL_COMMAND CMD=hello_world

[virtual_sdcard]
path = ~/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]
recover_velocity = 25

[display_status]

[respond]

[gcode_macro START_PRINT]
gcode = 
	G28
	RESPOND MSG='STARTING PRINT'
	RESPOND MSG='Starting extruder heating'
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
	RESPOND MSG='Starting bed heating'
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	BED_MESH_CLEAR
	BED_MESH_CALIBRATE
	M104 S{EXTRUDER_TEMP}
	M140 S{BED_TEMP}
	
	G90
	
	
	
	G92 E0
	G1 Z10 F3000
	M190 S{BED_TEMP}; Wait for bed to reach temperature
	M109 S{EXTRUDER_TEMP}
	G1 Z2.0 F3000; Clean nozzle
	G1 X5.1 Y20 Z0.3 F5000.0
	G1 X5.1 Y200.0 Z0.3 F1500.0 E15
	G1 X5.4 Y200.0 Z0.3 F5000.0
	G1 X5.4 Y20 Z0.3 F1500.0 E30
	G1 Z0.2 F3000
	G92 E0

[gcode_macro END_PRINT]
gcode = 
	
	M140 S0
	M104 S0
	M106 S0
	
	G91
	G1 Z0.2 E-2 F2400
	G1 X-2 Y-2 E-3 F300
	
	G1 Z10 F3000
	G90
	
	M84

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
	{% set retract = client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x|length > 0 or park_y|length > 0 %}
	
	
	{% if printer['gcode_macro PAUSE'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro PAUSE'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
variable_restore_idle_timeout = 0
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set idle_timeout = client.idle_timeout|default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0%}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE|default(1)|int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
variable_last_extruder_temp = {'restore': False, 'temp': 0}
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move|default(velocity) %}
	
	
	{% if printer['gcode_macro PAUSE'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro PAUSE'].restore_idle_timeout}
	{% endif %}
	{% if printer.idle_timeout.state|upper == "IDLE" %}
	{% if last_extruder_temp.restore %} M109 S{last_extruder_temp.temp} {% endif %}
	{% endif %}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE|default(1)|int != 0 %}
	{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
	{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = client.custom_park_y|default(0.0) %}
	{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = client.speed_hop|default(15) * 60 %}
	{% set sp_move        = client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Extruder not hot enough'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[gcode_macro TRAMMING]
gcode = 
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z10 F5000.0
	
	
	G1 X75 Y35 F5000.0
	PROBE
	G1 Z10 F5000.0
	
	
	G1 X200 Y35 F5000.0
	PROBE
	G1 Z10 F5000.0
	
	
	G1 X200 Y200 F5000.0
	PROBE
	G1 Z10 F5000.0
	
	
	G1 X75 Y200 F5000.0
	PROBE
	G1 Z10 F5000.0
	
	{% else %}
	RESPOND MSG='Printer not homed'
	{% endif %}

[gcode_macro UPDATE_GITHUB]
gcode = 
	RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
command = bash /home/juani/printer_data/klipper-backup/script.sh
timeout = 90.0
verbose = True

[exclude_object]

[gcode_macro BED_MESH_CALIBRATE]
rename_existing = _BED_MESH_CALIBRATE
gcode = 
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}
	{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}
	{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}
	{% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}
	{% set verbose_enable = kamp_settings.verbose_enable | abs %}
	{% set probe_dock_enable = kamp_settings.probe_dock_enable | abs %}
	{% set attach_macro = kamp_settings.attach_macro | string %}
	{% set detach_macro = kamp_settings.detach_macro | string %}
	{% set mesh_margin = kamp_settings.mesh_margin | float %}
	{% set fuzz_amount = kamp_settings.fuzz_amount | float %}
	{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}
	{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}
	{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}
	{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}
	{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}
	{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}
	{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}
	
	{% set fuzz_range = range((0) | int, (fuzz_amount * 100) | int + 1) %}
	{% set adapted_x_min = x_min - mesh_margin - (fuzz_range | random / 100.0) %}
	{% set adapted_y_min = y_min - mesh_margin - (fuzz_range | random / 100.0) %}
	{% set adapted_x_max = x_max + mesh_margin + (fuzz_range | random / 100.0) %}
	{% set adapted_y_max = y_max + mesh_margin + (fuzz_range | random / 100.0) %}
	
	{% set adapted_x_min = [adapted_x_min , bed_mesh_min[0]] | max %}
	{% set adapted_y_min = [adapted_y_min , bed_mesh_min[1]] | max %}
	{% set adapted_x_max = [adapted_x_max , bed_mesh_max[0]] | min %}
	{% set adapted_y_max = [adapted_y_max , bed_mesh_max[1]] | min %}
	
	{% set points_x = (((adapted_x_max - adapted_x_min) / max_probe_point_distance_x) | round(method='ceil') | int) + 1 %}
	{% set points_y = (((adapted_y_max - adapted_y_min) / max_probe_point_distance_y) | round(method='ceil') | int) + 1 %}
	
	{% if (([points_x, points_y]|max) > 6) %}
	{% set algorithm = "bicubic" %}
	{% set min_points = 4 %}
	{% else %}
	{% set algorithm = "lagrange" %}
	{% set min_points = 3 %}
	{% endif %}
	
	{% set points_x = [points_x , min_points]|max %}
	{% set points_y = [points_y , min_points]|max %}
	{% set points_x = [points_x , probe_count[0]]|min %}
	{% set points_y = [points_y , probe_count[1]]|min %}
	
	{% if verbose_enable == True %}
	{% if printer.exclude_object.objects != [] %}
	
	{ action_respond_info( "Algorithm: {}.".format(
	(algorithm),
	)) }
	
	{ action_respond_info("Default probe count: {},{}.".format(
	(probe_count[0]),
	(probe_count[1]),
	)) }
	
	{ action_respond_info("Adapted probe count: {},{}.".format(
	(points_x),
	(points_y),
	)) }
	
	{action_respond_info("Default mesh bounds: {}, {}.".format(
	(bed_mesh_min[0],bed_mesh_min[1]),
	(bed_mesh_max[0],bed_mesh_max[1]),
	)) }
	
	{% if mesh_margin > 0 %}
	{action_respond_info("Mesh margin is {}, mesh bounds extended by {}mm.".format(
	(mesh_margin),
	(mesh_margin),
	)) }
	{% else %}
	{action_respond_info("Mesh margin is 0, margin not increased.")}
	{% endif %}
	
	{% if fuzz_amount > 0 %}
	{action_respond_info("Mesh point fuzzing enabled, points fuzzed up to {}mm.".format(
	(fuzz_amount),
	)) }
	{% else %}
	{action_respond_info("Fuzz amount is 0, mesh points not fuzzed.")}
	{% endif %}
	
	{ action_respond_info("Adapted mesh bounds: {}, {}.".format(
	(adapted_x_min, adapted_y_min),
	(adapted_x_max, adapted_y_max),
	)) }
	
	{action_respond_info("KAMP adjustments successful. Happy KAMPing!")}
	
	{% else %}
	
	{action_respond_info("No objects detected! Check your gcode and make sure that EXCLUDE_OBJECT_DEFINE is happening before BED_MESH_CALIBRATE is called. Defaulting to regular meshing.")}
	G4 P5000
	{% endif %}
	
	{% endif %}
	
	{% if probe_dock_enable == True %}
	{attach_macro}
	{% endif %}
	
	_BED_MESH_CALIBRATE mesh_min={adapted_x_min},{adapted_y_min} mesh_max={adapted_x_max},{adapted_y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y}
	
	{% if probe_dock_enable == True %}
	{detach_macro}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	
	{% set verbose_enable = printer["gcode_macro _KAMP_Settings"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro _KAMP_Settings"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro _KAMP_Settings"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro _KAMP_Settings"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro _KAMP_Settings"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro _KAMP_Settings"].flow_rate | float %}
	
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	
	{% if cross_section < 5 %}
	
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	
	{% else %}
	
	{% if verbose_enable == True %}
	
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	
	{% if purge_y_origin > 0 %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm/s3.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% else %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm/s3.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% else %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% endif %}
	
	RESTORE_GCODE_STATE NAME=Prepurge_State
	
	{% endif %}

[gcode_macro SMART_PARK]
description = Parks your printhead near the print area for pre-print hotend heating.
gcode = 
	
	{% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}
	{% set z_height = kamp_settings.smart_park_height | float %}
	{% set purge_margin = kamp_settings.purge_margin | float %}
	{% set verbose_enable = kamp_settings.verbose_enable | abs %}
	{% set center_x = printer.toolhead.axis_maximum.x / 2 | float %}
	{% set center_y = printer.toolhead.axis_maximum.y / 2 | float %}
	{% set axis_minimum_x = printer.toolhead.axis_minimum.x | float %}
	{% set axis_minimum_y = printer.toolhead.axis_minimum.y | float %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_min = all_points | map(attribute=0) | min | default(center_x) %}
	{% set y_min = all_points | map(attribute=1) | min | default(center_y) %}
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	
	{% if purge_margin > 0 and x_min != center_x and y_min != center_y %}
	{% set x_min = [ x_min - purge_margin , x_min ] | min %}
	{% set y_min = [ y_min - purge_margin , y_min ] | min %}
	{% set x_min = [ x_min , axis_minimum_x ] | max %}
	{% set y_min = [ y_min , axis_minimum_y ] | max %}
	{% endif %}
	
	
	{% if verbose_enable == True %}
	
	{ action_respond_info("Smart Park location: {},{}.".format(
	(x_min),
	(y_min),
	)) }
	
	{% endif %}
	
	{% if printer.toolhead.position.z < z_height %}
	G0 Z{z_height}
	{% endif %}
	G0 X{x_min} Y{y_min} F{travel_speed}
	G0 Z{z_height}

[gcode_macro _KAMP_Settings]
description = This macro contains all adjustable settings for KAMP
variable_verbose_enable = True
variable_mesh_margin = 5
variable_fuzz_amount = 0
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
variable_purge_height = 0.8
variable_tip_distance = 0
variable_purge_margin = 10
variable_purge_amount = 30
variable_flow_rate = 12
variable_smart_park_height = 10
gcode = 
	
	{action_respond_info(" Running the KAMP_Settings macro does nothing, it is only used for storing KAMP settings. ")}

[stepper_x]
step_pin = PC2
dir_pin = PB9
enable_pin = !PC3
microsteps = 16
rotation_distance = 40
endstop_pin = ^PA5
position_endstop = 0
position_max = 235
homing_speed = 50

[stepper_y]
step_pin = PB8
dir_pin = PB7
enable_pin = !PC3
microsteps = 16
rotation_distance = 40
endstop_pin = ^PA6
position_endstop = 0
position_max = 235
homing_speed = 50

[stepper_z]
step_pin = PB6
dir_pin = !PB5
enable_pin = !PC3
microsteps = 16
rotation_distance = 8
endstop_pin = probe:z_virtual_endstop
position_min = -5
position_max = 220

[extruder]
max_extrude_only_distance = 150.0
step_pin = PB4
dir_pin = PB3
enable_pin = !PC3
microsteps = 16
rotation_distance = 34.406
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PA1
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC5
min_temp = 0
max_temp = 250
pressure_advance = 0.48
control = pid
pid_kp = 27.102
pid_ki = 1.705
pid_kd = 107.731

[heater_bed]
heater_pin = PA2
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC4
min_temp = 0
max_temp = 130
control = pid
pid_kp = 74.327
pid_ki = 1.635
pid_kd = 844.541

[fan]
pin = PA0

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command

[printer]
kinematics = cartesian
max_velocity = 500
max_accel = 4000
max_z_velocity = 10
max_z_accel = 300

[display]
lcd_type = st7920
cs_pin = EXP1_7
sclk_pin = EXP1_6
sid_pin = EXP1_8
encoder_pins = ^EXP1_5, ^EXP1_3
click_pin = ^!EXP1_2

[output_pin beeper]
pin = EXP1_1

[board_pins]
aliases = 
	EXP1_1=PC6,EXP1_3=PB10,EXP1_5=PB14,EXP1_7=PB12,EXP1_9=<GND>,
	EXP1_2=PB2,EXP1_4=PB11,EXP1_6=PB13,EXP1_8=PB15,EXP1_10=<5V>,
	PROBE_IN=PB1,PROBE_OUT=PB0,FIL_RUNOUT=PC6

[bltouch]
sensor_pin = ^PB1
control_pin = PB0
x_offset = -45
y_offset = -7
z_offset = 1.124
probe_with_touch_mode = true
stow_on_each_sample = false
pin_up_touch_mode_reports_triggered = False

[safe_z_home]
home_xy_position = 162.5,124.5
speed = 75
z_hop = 10
z_hop_speed = 5

[bed_mesh]
speed = 120
horizontal_move_z = 5
mesh_min = 15, 15
mesh_max = 188, 191
probe_count = 9,9
algorithm = bicubic
fade_start = 1
fade_end = 10
fade_target = 0

[filament_switch_sensor RUNOUT]
switch_pin = !PA4
pause_on_runout = true
runout_gcode = PAUSE
insert_gcode = 
event_delay = 2.0
pause_delay = 0.2

[screws_tilt_adjust]
screw1 = 76, 38
screw1_name = front left screw
screw2 = 234, 38
screw2_name = front right screw
screw3 = 234, 203
screw3_name = rear right screw
screw4 = 76, 203
screw4_name = rear left screw
horizontal_move_z = 10.
speed = 250.
screw_thread = CW-M4

[bed_mesh default]
version = 1
points = 
	0.095000, 0.092500, 0.085000, 0.087500, 0.075000, 0.057500, 0.067500, 0.027500, 0.002500
	0.045000, 0.022500, 0.042500, 0.030000, 0.007500, -0.002500, -0.012500, -0.007500, -0.010000
	0.075000, 0.100000, 0.062500, 0.067500, 0.042500, 0.027500, 0.032500, 0.012500, 0.002500
	0.065000, 0.117500, 0.052500, 0.015000, -0.002500, -0.012500, -0.007500, -0.017500, -0.010000
	-0.020000, 0.005000, -0.007500, 0.012500, 0.000000, 0.010000, 0.025000, 0.010000, 0.000000
	-0.007500, -0.025000, -0.002500, -0.002500, -0.012500, 0.002500, -0.002500, 0.005000, 0.025000
	-0.007500, -0.005000, 0.015000, 0.030000, 0.045000, 0.057500, 0.067500, 0.055000, 0.050000
	-0.052500, -0.047500, -0.030000, -0.002500, 0.017500, 0.035000, 0.047500, 0.060000, 0.082500
	-0.022500, 0.010000, 0.037500, 0.082500, 0.092500, 0.115000, 0.147500, 0.127500, 0.150000
x_count = 9
y_count = 9
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 15.0
max_x = 187.96
min_y = 15.0
max_y = 191.0
=======================
Loaded MCU 'mcu' 112 commands (v0.11.0-304-gf7567a0d / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.35.2-2+14+b2) 2.35.2)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=72000000 MCU=stm32f103xe PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_serial=PA10,PA9 SERIAL_BAUD=250000 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Configured MCU 'mcu' (1024 moves)
Args: ['/home/juani/klipper/klippy/klippy.py', '/home/juani/printer_data/config/printer.cfg', '-I', '/home/juani/printer_data/comms/klippy.serial', '-l', '/home/juani/printer_data/logs/klippy.log', '-a', '/home/juani/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-10-gea2f6bc0-dirty'
Untracked files: klippy/extras/gcode_shell_command.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 4 core Intel(R) Core(TM) i5-2520M CPU @ 2.50GHz
Python: '3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0]'
webhooks client 140096244397920: {'program': 'Moonraker', 'version': 'v0.8.0-204-gfb15b2a'}
=============== Log rollover at Mon Dec  4 11:26:03 2023 ===============
Stats 225665.4: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=1520614 bytes_read=26561094 bytes_retransmit=9 bytes_invalid=0 send_seq=239440 receive_seq=239440 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000322  heater_bed: target=0 temp=22.7 pwm=0.000 sysload=0.35 cputime=4178.528 memavail=1331984 print_time=223885.691 buffer_time=0.508 print_stall=2 extruder: target=0 temp=23.1 pwm=0.000
Attempting MCU 'mcu' reset command
webhooks client 140096244397920: Disconnected
Restarting printer
Start printer at Mon Dec  4 11:26:05 2023 (1701699965.2 225667.4)
===== Config file =====
[gcode_shell_command hello_world]
command = echo hello world
timeout = 2.
verbose = True

[gcode_macro HELLO_WORLD]
gcode = 
	RUN_SHELL_COMMAND CMD=hello_world

[virtual_sdcard]
path = ~/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]
recover_velocity = 25

[display_status]

[respond]

[gcode_macro START_PRINT]
gcode = 
	G28
	RESPOND MSG='STARTING PRINT'
	RESPOND MSG='Starting extruder heating'
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
	RESPOND MSG='Starting bed heating'
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	BED_MESH_CLEAR
	BED_MESH_CALIBRATE
	M104 S{EXTRUDER_TEMP}
	M140 S{BED_TEMP}
	
	G90
	
	
	
	G92 E0
	G1 Z10 F3000
	M190 S{BED_TEMP}; Wait for bed to reach temperature
	M109 S{EXTRUDER_TEMP}
	G1 Z2.0 F3000; Clean nozzle
	G1 X5.1 Y20 Z0.3 F5000.0
	G1 X5.1 Y200.0 Z0.3 F1500.0 E15
	G1 X5.4 Y200.0 Z0.3 F5000.0
	G1 X5.4 Y20 Z0.3 F1500.0 E30
	G1 Z0.2 F3000
	G92 E0

[gcode_macro END_PRINT]
gcode = 
	
	M140 S0
	M104 S0
	M106 S0
	
	G91
	G1 Z0.2 E-2 F2400
	G1 X-2 Y-2 E-3 F300
	
	G1 Z10 F3000
	G90
	
	M84

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
	{% set retract = client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x|length > 0 or park_y|length > 0 %}
	
	
	{% if printer['gcode_macro PAUSE'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro PAUSE'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
variable_restore_idle_timeout = 0
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set idle_timeout = client.idle_timeout|default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0%}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE|default(1)|int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
variable_last_extruder_temp = {'restore': False, 'temp': 0}
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move|default(velocity) %}
	
	
	{% if printer['gcode_macro PAUSE'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro PAUSE'].restore_idle_timeout}
	{% endif %}
	{% if printer.idle_timeout.state|upper == "IDLE" %}
	{% if last_extruder_temp.restore %} M109 S{last_extruder_temp.temp} {% endif %}
	{% endif %}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE|default(1)|int != 0 %}
	{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
	{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = client.custom_park_y|default(0.0) %}
	{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = client.speed_hop|default(15) * 60 %}
	{% set sp_move        = client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Extruder not hot enough'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[gcode_macro TRAMMING]
gcode = 
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z10 F5000.0
	
	
	G1 X75 Y35 F5000.0
	PROBE
	G1 Z10 F5000.0
	
	
	G1 X200 Y35 F5000.0
	PROBE
	G1 Z10 F5000.0
	
	
	G1 X200 Y200 F5000.0
	PROBE
	G1 Z10 F5000.0
	
	
	G1 X75 Y200 F5000.0
	PROBE
	G1 Z10 F5000.0
	
	{% else %}
	RESPOND MSG='Printer not homed'
	{% endif %}

[gcode_macro UPDATE_GITHUB]
gcode = 
	RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
command = bash /home/juani/printer_data/klipper-backup/script.sh
timeout = 90.0
verbose = True

[exclude_object]

[gcode_macro BED_MESH_CALIBRATE]
rename_existing = _BED_MESH_CALIBRATE
gcode = 
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}
	{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}
	{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}
	{% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}
	{% set verbose_enable = kamp_settings.verbose_enable | abs %}
	{% set probe_dock_enable = kamp_settings.probe_dock_enable | abs %}
	{% set attach_macro = kamp_settings.attach_macro | string %}
	{% set detach_macro = kamp_settings.detach_macro | string %}
	{% set mesh_margin = kamp_settings.mesh_margin | float %}
	{% set fuzz_amount = kamp_settings.fuzz_amount | float %}
	{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}
	{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}
	{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}
	{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}
	{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}
	{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}
	{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}
	
	{% set fuzz_range = range((0) | int, (fuzz_amount * 100) | int + 1) %}
	{% set adapted_x_min = x_min - mesh_margin - (fuzz_range | random / 100.0) %}
	{% set adapted_y_min = y_min - mesh_margin - (fuzz_range | random / 100.0) %}
	{% set adapted_x_max = x_max + mesh_margin + (fuzz_range | random / 100.0) %}
	{% set adapted_y_max = y_max + mesh_margin + (fuzz_range | random / 100.0) %}
	
	{% set adapted_x_min = [adapted_x_min , bed_mesh_min[0]] | max %}
	{% set adapted_y_min = [adapted_y_min , bed_mesh_min[1]] | max %}
	{% set adapted_x_max = [adapted_x_max , bed_mesh_max[0]] | min %}
	{% set adapted_y_max = [adapted_y_max , bed_mesh_max[1]] | min %}
	
	{% set points_x = (((adapted_x_max - adapted_x_min) / max_probe_point_distance_x) | round(method='ceil') | int) + 1 %}
	{% set points_y = (((adapted_y_max - adapted_y_min) / max_probe_point_distance_y) | round(method='ceil') | int) + 1 %}
	
	{% if (([points_x, points_y]|max) > 6) %}
	{% set algorithm = "bicubic" %}
	{% set min_points = 4 %}
	{% else %}
	{% set algorithm = "lagrange" %}
	{% set min_points = 3 %}
	{% endif %}
	
	{% set points_x = [points_x , min_points]|max %}
	{% set points_y = [points_y , min_points]|max %}
	{% set points_x = [points_x , probe_count[0]]|min %}
	{% set points_y = [points_y , probe_count[1]]|min %}
	
	{% if verbose_enable == True %}
	{% if printer.exclude_object.objects != [] %}
	
	{ action_respond_info( "Algorithm: {}.".format(
	(algorithm),
	)) }
	
	{ action_respond_info("Default probe count: {},{}.".format(
	(probe_count[0]),
	(probe_count[1]),
	)) }
	
	{ action_respond_info("Adapted probe count: {},{}.".format(
	(points_x),
	(points_y),
	)) }
	
	{action_respond_info("Default mesh bounds: {}, {}.".format(
	(bed_mesh_min[0],bed_mesh_min[1]),
	(bed_mesh_max[0],bed_mesh_max[1]),
	)) }
	
	{% if mesh_margin > 0 %}
	{action_respond_info("Mesh margin is {}, mesh bounds extended by {}mm.".format(
	(mesh_margin),
	(mesh_margin),
	)) }
	{% else %}
	{action_respond_info("Mesh margin is 0, margin not increased.")}
	{% endif %}
	
	{% if fuzz_amount > 0 %}
	{action_respond_info("Mesh point fuzzing enabled, points fuzzed up to {}mm.".format(
	(fuzz_amount),
	)) }
	{% else %}
	{action_respond_info("Fuzz amount is 0, mesh points not fuzzed.")}
	{% endif %}
	
	{ action_respond_info("Adapted mesh bounds: {}, {}.".format(
	(adapted_x_min, adapted_y_min),
	(adapted_x_max, adapted_y_max),
	)) }
	
	{action_respond_info("KAMP adjustments successful. Happy KAMPing!")}
	
	{% else %}
	
	{action_respond_info("No objects detected! Check your gcode and make sure that EXCLUDE_OBJECT_DEFINE is happening before BED_MESH_CALIBRATE is called. Defaulting to regular meshing.")}
	G4 P5000
	{% endif %}
	
	{% endif %}
	
	{% if probe_dock_enable == True %}
	{attach_macro}
	{% endif %}
	
	_BED_MESH_CALIBRATE mesh_min={adapted_x_min},{adapted_y_min} mesh_max={adapted_x_max},{adapted_y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y}
	
	{% if probe_dock_enable == True %}
	{detach_macro}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	
	{% set verbose_enable = printer["gcode_macro _KAMP_Settings"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro _KAMP_Settings"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro _KAMP_Settings"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro _KAMP_Settings"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro _KAMP_Settings"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro _KAMP_Settings"].flow_rate | float %}
	
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	
	{% if cross_section < 5 %}
	
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	
	{% else %}
	
	{% if verbose_enable == True %}
	
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	
	{% if purge_y_origin > 0 %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm/s3.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% else %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm/s3.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% else %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% endif %}
	
	RESTORE_GCODE_STATE NAME=Prepurge_State
	
	{% endif %}

[gcode_macro SMART_PARK]
description = Parks your printhead near the print area for pre-print hotend heating.
gcode = 
	
	{% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}
	{% set z_height = kamp_settings.smart_park_height | float %}
	{% set purge_margin = kamp_settings.purge_margin | float %}
	{% set verbose_enable = kamp_settings.verbose_enable | abs %}
	{% set center_x = printer.toolhead.axis_maximum.x / 2 | float %}
	{% set center_y = printer.toolhead.axis_maximum.y / 2 | float %}
	{% set axis_minimum_x = printer.toolhead.axis_minimum.x | float %}
	{% set axis_minimum_y = printer.toolhead.axis_minimum.y | float %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_min = all_points | map(attribute=0) | min | default(center_x) %}
	{% set y_min = all_points | map(attribute=1) | min | default(center_y) %}
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	
	{% if purge_margin > 0 and x_min != center_x and y_min != center_y %}
	{% set x_min = [ x_min - purge_margin , x_min ] | min %}
	{% set y_min = [ y_min - purge_margin , y_min ] | min %}
	{% set x_min = [ x_min , axis_minimum_x ] | max %}
	{% set y_min = [ y_min , axis_minimum_y ] | max %}
	{% endif %}
	
	
	{% if verbose_enable == True %}
	
	{ action_respond_info("Smart Park location: {},{}.".format(
	(x_min),
	(y_min),
	)) }
	
	{% endif %}
	
	{% if printer.toolhead.position.z < z_height %}
	G0 Z{z_height}
	{% endif %}
	G0 X{x_min} Y{y_min} F{travel_speed}
	G0 Z{z_height}

[gcode_macro _KAMP_Settings]
description = This macro contains all adjustable settings for KAMP
variable_verbose_enable = True
variable_mesh_margin = 5
variable_fuzz_amount = 0
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
variable_purge_height = 0.8
variable_tip_distance = 0
variable_purge_margin = 10
variable_purge_amount = 30
variable_flow_rate = 12
variable_smart_park_height = 10
gcode = 
	
	{action_respond_info(" Running the KAMP_Settings macro does nothing, it is only used for storing KAMP settings. ")}

[stepper_x]
step_pin = PC2
dir_pin = PB9
enable_pin = !PC3
microsteps = 16
rotation_distance = 40
endstop_pin = ^PA5
position_endstop = 0
position_max = 235
homing_speed = 50

[stepper_y]
step_pin = PB8
dir_pin = PB7
enable_pin = !PC3
microsteps = 16
rotation_distance = 40
endstop_pin = ^PA6
position_endstop = 0
position_max = 235
homing_speed = 50

[stepper_z]
step_pin = PB6
dir_pin = !PB5
enable_pin = !PC3
microsteps = 16
rotation_distance = 8
endstop_pin = probe:z_virtual_endstop
position_min = -5
position_max = 220

[extruder]
max_extrude_only_distance = 150.0
step_pin = PB4
dir_pin = PB3
enable_pin = !PC3
microsteps = 16
rotation_distance = 34.406
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PA1
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC5
min_temp = 0
max_temp = 250
pressure_advance = 0.48
control = pid
pid_kp = 27.102
pid_ki = 1.705
pid_kd = 107.731

[heater_bed]
heater_pin = PA2
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC4
min_temp = 0
max_temp = 130
control = pid
pid_kp = 74.327
pid_ki = 1.635
pid_kd = 844.541

[fan]
pin = PA0

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command

[printer]
kinematics = cartesian
max_velocity = 500
max_accel = 4000
max_z_velocity = 10
max_z_accel = 300

[display]
lcd_type = st7920
cs_pin = EXP1_7
sclk_pin = EXP1_6
sid_pin = EXP1_8
encoder_pins = ^EXP1_5, ^EXP1_3
click_pin = ^!EXP1_2

[output_pin beeper]
pin = EXP1_1

[board_pins]
aliases = 
	EXP1_1=PC6,EXP1_3=PB10,EXP1_5=PB14,EXP1_7=PB12,EXP1_9=<GND>,
	EXP1_2=PB2,EXP1_4=PB11,EXP1_6=PB13,EXP1_8=PB15,EXP1_10=<5V>,
	PROBE_IN=PB1,PROBE_OUT=PB0,FIL_RUNOUT=PC6

[bltouch]
sensor_pin = ^PB1
control_pin = PB0
x_offset = -45
y_offset = -7
z_offset = 1.124
probe_with_touch_mode = true
stow_on_each_sample = false
pin_up_touch_mode_reports_triggered = False

[safe_z_home]
home_xy_position = 162.5,124.5
speed = 75
z_hop = 10
z_hop_speed = 5

[bed_mesh]
speed = 120
horizontal_move_z = 5
mesh_min = 15, 15
mesh_max = 188, 191
probe_count = 9,9
algorithm = bicubic
fade_start = 1
fade_end = 10
fade_target = 0

[filament_switch_sensor RUNOUT]
switch_pin = !PA4
pause_on_runout = true
runout_gcode = PAUSE
insert_gcode = 
event_delay = 2.0
pause_delay = 0.2

[screws_tilt_adjust]
screw1 = 76, 38
screw1_name = front left screw
screw2 = 234, 38
screw2_name = front right screw
screw3 = 234, 203
screw3_name = rear right screw
screw4 = 76, 203
screw4_name = rear left screw
horizontal_move_z = 10.
speed = 250.
screw_thread = CW-M4

[bed_mesh default]
version = 1
points = 
	0.095000, 0.092500, 0.085000, 0.087500, 0.075000, 0.057500, 0.067500, 0.027500, 0.002500
	0.045000, 0.022500, 0.042500, 0.030000, 0.007500, -0.002500, -0.012500, -0.007500, -0.010000
	0.075000, 0.100000, 0.062500, 0.067500, 0.042500, 0.027500, 0.032500, 0.012500, 0.002500
	0.065000, 0.117500, 0.052500, 0.015000, -0.002500, -0.012500, -0.007500, -0.017500, -0.010000
	-0.020000, 0.005000, -0.007500, 0.012500, 0.000000, 0.010000, 0.025000, 0.010000, 0.000000
	-0.007500, -0.025000, -0.002500, -0.002500, -0.012500, 0.002500, -0.002500, 0.005000, 0.025000
	-0.007500, -0.005000, 0.015000, 0.030000, 0.045000, 0.057500, 0.067500, 0.055000, 0.050000
	-0.052500, -0.047500, -0.030000, -0.002500, 0.017500, 0.035000, 0.047500, 0.060000, 0.082500
	-0.022500, 0.010000, 0.037500, 0.082500, 0.092500, 0.115000, 0.147500, 0.127500, 0.150000
x_count = 9
y_count = 9
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 15.0
max_x = 187.96
min_y = 15.0
max_y = 191.0
=======================
Extruder max_extrude_ratio=0.266081
mcu 'mcu': Starting serial connect
webhooks client 140096246531408: New connection
webhooks client 140096246531408: Client info {'program': 'Moonraker', 'version': 'v0.8.0-204-gfb15b2a'}
Loaded MCU 'mcu' 112 commands (v0.11.0-304-gf7567a0d / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.35.2-2+14+b2) 2.35.2)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=72000000 MCU=stm32f103xe PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_serial=PA10,PA9 SERIAL_BAUD=250000 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (60.0, 22.0)    | (15.0, 15.0)
  1   | (81.6, 22.0)    | (36.6, 15.0)
  2   | (103.2, 22.0)   | (58.2, 15.0)
  3   | (124.9, 22.0)   | (79.9, 15.0)
  4   | (146.5, 22.0)   | (101.5, 15.0)
  5   | (168.1, 22.0)   | (123.1, 15.0)
  6   | (189.7, 22.0)   | (144.7, 15.0)
  7   | (211.3, 22.0)   | (166.3, 15.0)
  8   | (233.0, 22.0)   | (188.0, 15.0)
  9   | (233.0, 44.0)   | (188.0, 37.0)
  10  | (211.3, 44.0)   | (166.3, 37.0)
  11  | (189.7, 44.0)   | (144.7, 37.0)
  12  | (168.1, 44.0)   | (123.1, 37.0)
  13  | (146.5, 44.0)   | (101.5, 37.0)
  14  | (124.9, 44.0)   | (79.9, 37.0)
  15  | (103.2, 44.0)   | (58.2, 37.0)
  16  | (81.6, 44.0)    | (36.6, 37.0)
  17  | (60.0, 44.0)    | (15.0, 37.0)
  18  | (60.0, 66.0)    | (15.0, 59.0)
  19  | (81.6, 66.0)    | (36.6, 59.0)
  20  | (103.2, 66.0)   | (58.2, 59.0)
  21  | (124.9, 66.0)   | (79.9, 59.0)
  22  | (146.5, 66.0)   | (101.5, 59.0)
  23  | (168.1, 66.0)   | (123.1, 59.0)
  24  | (189.7, 66.0)   | (144.7, 59.0)
  25  | (211.3, 66.0)   | (166.3, 59.0)
  26  | (233.0, 66.0)   | (188.0, 59.0)
  27  | (233.0, 88.0)   | (188.0, 81.0)
  28  | (211.3, 88.0)   | (166.3, 81.0)
  29  | (189.7, 88.0)   | (144.7, 81.0)
  30  | (168.1, 88.0)   | (123.1, 81.0)
  31  | (146.5, 88.0)   | (101.5, 81.0)
  32  | (124.9, 88.0)   | (79.9, 81.0)
  33  | (103.2, 88.0)   | (58.2, 81.0)
  34  | (81.6, 88.0)    | (36.6, 81.0)
  35  | (60.0, 88.0)    | (15.0, 81.0)
  36  | (60.0, 110.0)   | (15.0, 103.0)
  37  | (81.6, 110.0)   | (36.6, 103.0)
  38  | (103.2, 110.0)  | (58.2, 103.0)
  39  | (124.9, 110.0)  | (79.9, 103.0)
  40  | (146.5, 110.0)  | (101.5, 103.0)
  41  | (168.1, 110.0)  | (123.1, 103.0)
  42  | (189.7, 110.0)  | (144.7, 103.0)
  43  | (211.3, 110.0)  | (166.3, 103.0)
  44  | (233.0, 110.0)  | (188.0, 103.0)
  45  | (233.0, 132.0)  | (188.0, 125.0)
  46  | (211.3, 132.0)  | (166.3, 125.0)
  47  | (189.7, 132.0)  | (144.7, 125.0)
  48  | (168.1, 132.0)  | (123.1, 125.0)
  49  | (146.5, 132.0)  | (101.5, 125.0)
  50  | (124.9, 132.0)  | (79.9, 125.0)
  51  | (103.2, 132.0)  | (58.2, 125.0)
  52  | (81.6, 132.0)   | (36.6, 125.0)
  53  | (60.0, 132.0)   | (15.0, 125.0)
  54  | (60.0, 154.0)   | (15.0, 147.0)
  55  | (81.6, 154.0)   | (36.6, 147.0)
  56  | (103.2, 154.0)  | (58.2, 147.0)
  57  | (124.9, 154.0)  | (79.9, 147.0)
  58  | (146.5, 154.0)  | (101.5, 147.0)
  59  | (168.1, 154.0)  | (123.1, 147.0)
  60  | (189.7, 154.0)  | (144.7, 147.0)
  61  | (211.3, 154.0)  | (166.3, 147.0)
  62  | (233.0, 154.0)  | (188.0, 147.0)
  63  | (233.0, 176.0)  | (188.0, 169.0)
  64  | (211.3, 176.0)  | (166.3, 169.0)
  65  | (189.7, 176.0)  | (144.7, 169.0)
  66  | (168.1, 176.0)  | (123.1, 169.0)
  67  | (146.5, 176.0)  | (101.5, 169.0)
  68  | (124.9, 176.0)  | (79.9, 169.0)
  69  | (103.2, 176.0)  | (58.2, 169.0)
  70  | (81.6, 176.0)   | (36.6, 169.0)
  71  | (60.0, 176.0)   | (15.0, 169.0)
  72  | (60.0, 198.0)   | (15.0, 191.0)
  73  | (81.6, 198.0)   | (36.6, 191.0)
  74  | (103.2, 198.0)  | (58.2, 191.0)
  75  | (124.9, 198.0)  | (79.9, 191.0)
  76  | (146.5, 198.0)  | (101.5, 191.0)
  77  | (168.1, 198.0)  | (123.1, 191.0)
  78  | (189.7, 198.0)  | (144.7, 191.0)
  79  | (211.3, 198.0)  | (166.3, 191.0)
  80  | (233.0, 198.0)  | (188.0, 191.0)
Starting heater checks for extruder
Stats 225671.0: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000030 mcu_task_stddev=0.000050 bytes_write=1620 bytes_read=4330 bytes_retransmit=9 bytes_invalid=0 send_seq=135 receive_seq=132 retransmit_seq=2 srtt=0.003 rttvar=0.001 rto=0.025 ready_bytes=1976 upcoming_bytes=197 freq=71998008  heater_bed: target=0 temp=0.0 pwm=0.000 sysload=0.33 cputime=4179.443 memavail=1331460 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=0.0 pwm=0.000
webhooks: registering remote method 'shutdown_machine' for connection id: 140096246531408
webhooks: registering remote method 'reboot_machine' for connection id: 140096246531408
webhooks: registering remote method 'pause_job_queue' for connection id: 140096246531408
webhooks: registering remote method 'start_job_queue' for connection id: 140096246531408
Stats 225672.0: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000030 mcu_task_stddev=0.000050 bytes_write=4055 bytes_read=4706 bytes_retransmit=9 bytes_invalid=0 send_seq=182 receive_seq=182 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71999306  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.33 cputime=4179.471 memavail=1331436 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225673.0: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000030 mcu_task_stddev=0.000050 bytes_write=4061 bytes_read=4827 bytes_retransmit=9 bytes_invalid=0 send_seq=183 receive_seq=183 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71999808  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.33 cputime=4179.493 memavail=1332020 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225674.0: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000030 mcu_task_stddev=0.000050 bytes_write=4067 bytes_read=4933 bytes_retransmit=9 bytes_invalid=0 send_seq=184 receive_seq=184 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000417  heater_bed: target=0 temp=23.3 pwm=0.000 sysload=0.33 cputime=4179.519 memavail=1332236 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225675.0: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000030 mcu_task_stddev=0.000050 bytes_write=4073 bytes_read=5054 bytes_retransmit=9 bytes_invalid=0 send_seq=185 receive_seq=185 retransmit_seq=2 srtt=0.003 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000437  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.46 cputime=4179.541 memavail=1333460 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225676.0: gcodein=0  mcu: mcu_awake=0.068 mcu_task_avg=0.000358 mcu_task_stddev=0.000561 bytes_write=4079 bytes_read=5192 bytes_retransmit=9 bytes_invalid=0 send_seq=186 receive_seq=186 retransmit_seq=2 srtt=0.003 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000297  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.46 cputime=4179.564 memavail=1333536 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225677.0: gcodein=0  mcu: mcu_awake=0.068 mcu_task_avg=0.000358 mcu_task_stddev=0.000561 bytes_write=4085 bytes_read=5298 bytes_retransmit=9 bytes_invalid=0 send_seq=187 receive_seq=187 retransmit_seq=2 srtt=0.003 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000260  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.46 cputime=4179.584 memavail=1333228 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.8 pwm=0.000
Stats 225678.0: gcodein=0  mcu: mcu_awake=0.068 mcu_task_avg=0.000358 mcu_task_stddev=0.000561 bytes_write=4091 bytes_read=5419 bytes_retransmit=9 bytes_invalid=0 send_seq=188 receive_seq=188 retransmit_seq=2 srtt=0.003 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000292  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.46 cputime=4179.605 memavail=1333016 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225679.0: gcodein=0  mcu: mcu_awake=0.068 mcu_task_avg=0.000358 mcu_task_stddev=0.000561 bytes_write=4097 bytes_read=5540 bytes_retransmit=9 bytes_invalid=0 send_seq=189 receive_seq=189 retransmit_seq=2 srtt=0.003 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000259  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.46 cputime=4179.626 memavail=1331784 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225680.0: gcodein=0  mcu: mcu_awake=0.068 mcu_task_avg=0.000358 mcu_task_stddev=0.000561 bytes_write=4103 bytes_read=5646 bytes_retransmit=9 bytes_invalid=0 send_seq=190 receive_seq=190 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000242  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.42 cputime=4179.648 memavail=1331180 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225681.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4109 bytes_read=5780 bytes_retransmit=9 bytes_invalid=0 send_seq=191 receive_seq=191 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000238  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.42 cputime=4179.670 memavail=1331396 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225682.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4115 bytes_read=5901 bytes_retransmit=9 bytes_invalid=0 send_seq=192 receive_seq=192 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000204  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.42 cputime=4179.689 memavail=1331340 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225683.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4121 bytes_read=6007 bytes_retransmit=9 bytes_invalid=0 send_seq=193 receive_seq=193 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000205  heater_bed: target=0 temp=23.3 pwm=0.000 sysload=0.42 cputime=4179.710 memavail=1331072 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.6 pwm=0.000
Stats 225684.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4127 bytes_read=6128 bytes_retransmit=9 bytes_invalid=0 send_seq=194 receive_seq=194 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000227  heater_bed: target=0 temp=23.3 pwm=0.000 sysload=0.42 cputime=4179.732 memavail=1331992 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225685.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4133 bytes_read=6249 bytes_retransmit=9 bytes_invalid=0 send_seq=195 receive_seq=195 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000205  heater_bed: target=0 temp=23.3 pwm=0.000 sysload=0.39 cputime=4179.754 memavail=1331912 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225686.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4139 bytes_read=6355 bytes_retransmit=9 bytes_invalid=0 send_seq=196 receive_seq=196 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000214  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.39 cputime=4179.775 memavail=1331904 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225687.0: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4145 bytes_read=6489 bytes_retransmit=9 bytes_invalid=0 send_seq=197 receive_seq=197 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000222  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.39 cputime=4179.795 memavail=1331080 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225688.0: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4151 bytes_read=6610 bytes_retransmit=9 bytes_invalid=0 send_seq=198 receive_seq=198 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000236  heater_bed: target=0 temp=23.5 pwm=0.000 sysload=0.39 cputime=4179.817 memavail=1330836 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.8 pwm=0.000
Stats 225689.0: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4157 bytes_read=6716 bytes_retransmit=9 bytes_invalid=0 send_seq=199 receive_seq=199 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000257  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.39 cputime=4179.837 memavail=1330836 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225690.0: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4163 bytes_read=6837 bytes_retransmit=9 bytes_invalid=0 send_seq=200 receive_seq=200 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000274  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.52 cputime=4179.854 memavail=1330836 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225691.0: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4169 bytes_read=6958 bytes_retransmit=9 bytes_invalid=0 send_seq=201 receive_seq=201 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000269  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.52 cputime=4179.874 memavail=1330836 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225692.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4175 bytes_read=7077 bytes_retransmit=9 bytes_invalid=0 send_seq=202 receive_seq=202 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000254  heater_bed: target=0 temp=23.3 pwm=0.000 sysload=0.52 cputime=4179.893 memavail=1330836 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225693.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4181 bytes_read=7198 bytes_retransmit=9 bytes_invalid=0 send_seq=203 receive_seq=203 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000264  heater_bed: target=0 temp=23.3 pwm=0.000 sysload=0.52 cputime=4179.907 memavail=1322728 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225694.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4187 bytes_read=7319 bytes_retransmit=9 bytes_invalid=0 send_seq=204 receive_seq=204 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000276  heater_bed: target=0 temp=23.3 pwm=0.000 sysload=0.52 cputime=4179.923 memavail=1322812 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225695.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4193 bytes_read=7425 bytes_retransmit=9 bytes_invalid=0 send_seq=205 receive_seq=205 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000305  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.48 cputime=4179.944 memavail=1322560 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225696.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4199 bytes_read=7546 bytes_retransmit=9 bytes_invalid=0 send_seq=206 receive_seq=206 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000315  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.48 cputime=4179.960 memavail=1322560 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.8 pwm=0.000
Stats 225697.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4205 bytes_read=7680 bytes_retransmit=9 bytes_invalid=0 send_seq=207 receive_seq=207 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000338  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.48 cputime=4179.977 memavail=1321228 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225698.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4211 bytes_read=7786 bytes_retransmit=9 bytes_invalid=0 send_seq=208 receive_seq=208 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000335  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.48 cputime=4179.997 memavail=1321420 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225699.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4217 bytes_read=7907 bytes_retransmit=9 bytes_invalid=0 send_seq=209 receive_seq=209 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000337  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.48 cputime=4180.010 memavail=1316888 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225700.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4223 bytes_read=8028 bytes_retransmit=9 bytes_invalid=0 send_seq=210 receive_seq=210 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000331  heater_bed: target=0 temp=23.3 pwm=0.000 sysload=0.44 cputime=4180.031 memavail=1318204 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225701.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4229 bytes_read=8134 bytes_retransmit=9 bytes_invalid=0 send_seq=211 receive_seq=211 retransmit_seq=2 srtt=0.003 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000356  heater_bed: target=0 temp=23.3 pwm=0.000 sysload=0.44 cputime=4180.050 memavail=1317728 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225702.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4235 bytes_read=8268 bytes_retransmit=9 bytes_invalid=0 send_seq=212 receive_seq=212 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000348  heater_bed: target=0 temp=23.3 pwm=0.000 sysload=0.44 cputime=4180.068 memavail=1317728 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225703.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4241 bytes_read=8389 bytes_retransmit=9 bytes_invalid=0 send_seq=213 receive_seq=213 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000348  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.44 cputime=4180.082 memavail=1316476 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225704.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4247 bytes_read=8495 bytes_retransmit=9 bytes_invalid=0 send_seq=214 receive_seq=214 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000335  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.44 cputime=4180.096 memavail=1316036 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225705.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4253 bytes_read=8616 bytes_retransmit=9 bytes_invalid=0 send_seq=215 receive_seq=215 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000334  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.40 cputime=4180.117 memavail=1316876 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225706.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4259 bytes_read=8737 bytes_retransmit=9 bytes_invalid=0 send_seq=216 receive_seq=216 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000335  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.40 cputime=4180.138 memavail=1317020 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225707.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4265 bytes_read=8856 bytes_retransmit=9 bytes_invalid=0 send_seq=217 receive_seq=217 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000322  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.40 cputime=4180.159 memavail=1317076 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225708.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4271 bytes_read=8977 bytes_retransmit=9 bytes_invalid=0 send_seq=218 receive_seq=218 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000312  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.40 cputime=4180.173 memavail=1316664 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.8 pwm=0.000
Stats 225709.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4277 bytes_read=9098 bytes_retransmit=9 bytes_invalid=0 send_seq=219 receive_seq=219 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000301  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.40 cputime=4180.190 memavail=1316784 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.8 pwm=0.000
Stats 225710.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4283 bytes_read=9204 bytes_retransmit=9 bytes_invalid=0 send_seq=220 receive_seq=220 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000300  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.37 cputime=4180.206 memavail=1316560 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225711.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4289 bytes_read=9325 bytes_retransmit=9 bytes_invalid=0 send_seq=221 receive_seq=221 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000295  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.37 cputime=4180.217 memavail=1321304 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225712.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4295 bytes_read=9459 bytes_retransmit=9 bytes_invalid=0 send_seq=222 receive_seq=222 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000297  heater_bed: target=0 temp=23.3 pwm=0.000 sysload=0.37 cputime=4180.238 memavail=1321656 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225713.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4301 bytes_read=9565 bytes_retransmit=9 bytes_invalid=0 send_seq=223 receive_seq=223 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000302  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.37 cputime=4180.256 memavail=1321280 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.6 pwm=0.000
Stats 225714.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4307 bytes_read=9686 bytes_retransmit=9 bytes_invalid=0 send_seq=224 receive_seq=224 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000296  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.37 cputime=4180.271 memavail=1321336 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225715.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4313 bytes_read=9807 bytes_retransmit=9 bytes_invalid=0 send_seq=225 receive_seq=225 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000296  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.34 cputime=4180.283 memavail=1321372 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225716.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4319 bytes_read=9913 bytes_retransmit=9 bytes_invalid=0 send_seq=226 receive_seq=226 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000301  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.34 cputime=4180.303 memavail=1321836 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.8 pwm=0.000
Stats 225717.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4325 bytes_read=10047 bytes_retransmit=9 bytes_invalid=0 send_seq=227 receive_seq=227 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000307  heater_bed: target=0 temp=23.5 pwm=0.000 sysload=0.34 cputime=4180.324 memavail=1324340 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225718.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4331 bytes_read=10168 bytes_retransmit=9 bytes_invalid=0 send_seq=228 receive_seq=228 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000301  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.34 cputime=4180.334 memavail=1324408 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225719.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4337 bytes_read=10274 bytes_retransmit=9 bytes_invalid=0 send_seq=229 receive_seq=229 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000308  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.34 cputime=4180.354 memavail=1324256 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.8 pwm=0.000
Stats 225720.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4343 bytes_read=10395 bytes_retransmit=9 bytes_invalid=0 send_seq=230 receive_seq=230 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000302  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.31 cputime=4180.369 memavail=1324292 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225721.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4349 bytes_read=10516 bytes_retransmit=9 bytes_invalid=0 send_seq=231 receive_seq=231 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000307  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.31 cputime=4180.389 memavail=1324364 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225722.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4355 bytes_read=10635 bytes_retransmit=9 bytes_invalid=0 send_seq=232 receive_seq=232 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000313  heater_bed: target=0 temp=23.3 pwm=0.000 sysload=0.31 cputime=4180.407 memavail=1324528 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225723.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4361 bytes_read=10756 bytes_retransmit=9 bytes_invalid=0 send_seq=233 receive_seq=233 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000316  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.31 cputime=4180.428 memavail=1328884 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225724.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4367 bytes_read=10877 bytes_retransmit=9 bytes_invalid=0 send_seq=234 receive_seq=234 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000311  heater_bed: target=0 temp=23.3 pwm=0.000 sysload=0.31 cputime=4180.439 memavail=1328496 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Stats 225725.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4373 bytes_read=10979 bytes_retransmit=9 bytes_invalid=0 send_seq=235 receive_seq=235 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000306  heater_bed: target=0 temp=23.4 pwm=0.000 sysload=0.29 cputime=4180.449 memavail=1327700 print_time=0.001 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.7 pwm=0.000
Running Command {update_git_script}...:
Reinicializado el repositorio Git existente en /home/juani/printer_data/klipper-backup/.git/

WARNING: git-filter-branch has a glut of gotchas generating mangled history
	 rewrites.  Hit Ctrl-C before proceeding to abort, then use an
	 alternative filtering tool such as 'git filter-repo'
	 (https://github.com/newren/git-filter-repo/) instead.  See the
	 filter-branch manual page for more details; to squelch this warning,
	 set FILTER_BRANCH_SQUELCH_WARNING=1.

Proceeding with filter-branch...


Rewrite 65b48be32ed3d120c90bc2afb890831ed7f7b91b (1/43) (0 seconds passed, remaining 0 predicted)    fatal: /.env: '/.env' está fuera del repositorio en '/home/juani/printer_data/klipper-backup/.git-rewrite/t'

index filter failed: git rm -r --cached --ignore-unmatch "$parent_path"/.env

Identidad del autor desconocido

*** Por favor cuéntame quién eres.

Ejecuta

  git config --global user.email "you@example.com"
  git config --global user.name "Tu Nombre"

para configurar la identidad por defecto de tu cuenta.
Omite --global para configurar tu identidad solo en este repositorio.


fatal: no es posible auto-detectar la dirección de correo (se obtuvo 'juani@klipper.(none)')

To https://github.com/jlarrainf/ender3v2-klipper-backup.git
 ! [rejected]        main -> main (fetch first)

error: falló el empuje de algunas referencias a 'https://github.com/jlarrainf/ender3v2-klipper-backup.git'

ayuda: Actualizaciones fueron rechazadas porque el remoto contiene trabajo que
ayuda: no existe localmente. Esto es causado usualmente por otro repositorio
ayuda: empujando a la misma ref. Quizás quieras integrar primero los cambios
ayuda: remotos (ej. 'git pull ...') antes de volver a hacer push.
ayuda: Mira 'Notes about fast-forwards' en 'git push --help' para detalles.

Command {update_git_script} finished

webhooks client 140096246531408: Disconnected
webhooks client 140096246256288: New connection
webhooks client 140096246256288: Client info {'program': 'Moonraker', 'version': 'v0.8.0-206-g9ad8fed'}
webhooks: registering remote method 'shutdown_machine' for connection id: 140096246256288
webhooks: registering remote method 'reboot_machine' for connection id: 140096246256288
webhooks: registering remote method 'pause_job_queue' for connection id: 140096246256288
webhooks: registering remote method 'start_job_queue' for connection id: 140096246256288
Starting Klippy...
Args: ['/home/juani/klipper/klippy/klippy.py', '/home/juani/printer_data/config/printer.cfg', '-I', '/home/juani/printer_data/comms/klippy.serial', '-l', '/home/juani/printer_data/logs/klippy.log', '-a', '/home/juani/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-13-g795ce490-dirty'
Untracked files: klippy/extras/gcode_shell_command.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 4 core Intel(R) Core(TM) i5-2520M CPU @ 2.50GHz
Python: '3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0]'
Start printer at Mon Dec  4 11:41:49 2023 (1701700909.8 226612.1)
===== Config file =====
[gcode_shell_command hello_world]
command = echo hello world
timeout = 2.
verbose = True

[gcode_macro HELLO_WORLD]
gcode = 
	RUN_SHELL_COMMAND CMD=hello_world

[virtual_sdcard]
path = ~/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]
recover_velocity = 25

[display_status]

[respond]

[gcode_macro START_PRINT]
gcode = 
	G28
	RESPOND MSG='STARTING PRINT'
	RESPOND MSG='Starting extruder heating'
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
	RESPOND MSG='Starting bed heating'
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	BED_MESH_CLEAR
	BED_MESH_CALIBRATE
	M104 S{EXTRUDER_TEMP}
	M140 S{BED_TEMP}
	
	G90
	
	
	
	G92 E0
	G1 Z10 F3000
	M190 S{BED_TEMP}; Wait for bed to reach temperature
	M109 S{EXTRUDER_TEMP}
	G1 Z2.0 F3000; Clean nozzle
	G1 X5.1 Y20 Z0.3 F5000.0
	G1 X5.1 Y200.0 Z0.3 F1500.0 E15
	G1 X5.4 Y200.0 Z0.3 F5000.0
	G1 X5.4 Y20 Z0.3 F1500.0 E30
	G1 Z0.2 F3000
	G92 E0

[gcode_macro END_PRINT]
gcode = 
	
	M140 S0
	M104 S0
	M106 S0
	
	G91
	G1 Z0.2 E-2 F2400
	G1 X-2 Y-2 E-3 F300
	
	G1 Z10 F3000
	G90
	
	M84

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
	{% set retract = client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x|length > 0 or park_y|length > 0 %}
	
	
	{% if printer['gcode_macro PAUSE'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro PAUSE'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
variable_restore_idle_timeout = 0
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set idle_timeout = client.idle_timeout|default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0%}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE|default(1)|int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
variable_last_extruder_temp = {'restore': False, 'temp': 0}
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move|default(velocity) %}
	
	
	{% if printer['gcode_macro PAUSE'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro PAUSE'].restore_idle_timeout}
	{% endif %}
	{% if printer.idle_timeout.state|upper == "IDLE" %}
	{% if last_extruder_temp.restore %} M109 S{last_extruder_temp.temp} {% endif %}
	{% endif %}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE|default(1)|int != 0 %}
	{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
	{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = client.custom_park_y|default(0.0) %}
	{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = client.speed_hop|default(15) * 60 %}
	{% set sp_move        = client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Extruder not hot enough'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[gcode_macro TRAMMING]
gcode = 
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z10 F5000.0
	
	
	G1 X75 Y35 F5000.0
	PROBE
	G1 Z10 F5000.0
	
	
	G1 X200 Y35 F5000.0
	PROBE
	G1 Z10 F5000.0
	
	
	G1 X200 Y200 F5000.0
	PROBE
	G1 Z10 F5000.0
	
	
	G1 X75 Y200 F5000.0
	PROBE
	G1 Z10 F5000.0
	
	{% else %}
	RESPOND MSG='Printer not homed'
	{% endif %}

[gcode_macro UPDATE_GITHUB]
gcode = 
	RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
command = bash /home/juani/printer_data/klipper-backup/script.sh
timeout = 90.0
verbose = True

[exclude_object]

[gcode_macro BED_MESH_CALIBRATE]
rename_existing = _BED_MESH_CALIBRATE
gcode = 
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}
	{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}
	{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}
	{% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}
	{% set verbose_enable = kamp_settings.verbose_enable | abs %}
	{% set probe_dock_enable = kamp_settings.probe_dock_enable | abs %}
	{% set attach_macro = kamp_settings.attach_macro | string %}
	{% set detach_macro = kamp_settings.detach_macro | string %}
	{% set mesh_margin = kamp_settings.mesh_margin | float %}
	{% set fuzz_amount = kamp_settings.fuzz_amount | float %}
	{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}
	{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}
	{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}
	{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}
	{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}
	{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}
	{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}
	
	{% set fuzz_range = range((0) | int, (fuzz_amount * 100) | int + 1) %}
	{% set adapted_x_min = x_min - mesh_margin - (fuzz_range | random / 100.0) %}
	{% set adapted_y_min = y_min - mesh_margin - (fuzz_range | random / 100.0) %}
	{% set adapted_x_max = x_max + mesh_margin + (fuzz_range | random / 100.0) %}
	{% set adapted_y_max = y_max + mesh_margin + (fuzz_range | random / 100.0) %}
	
	{% set adapted_x_min = [adapted_x_min , bed_mesh_min[0]] | max %}
	{% set adapted_y_min = [adapted_y_min , bed_mesh_min[1]] | max %}
	{% set adapted_x_max = [adapted_x_max , bed_mesh_max[0]] | min %}
	{% set adapted_y_max = [adapted_y_max , bed_mesh_max[1]] | min %}
	
	{% set points_x = (((adapted_x_max - adapted_x_min) / max_probe_point_distance_x) | round(method='ceil') | int) + 1 %}
	{% set points_y = (((adapted_y_max - adapted_y_min) / max_probe_point_distance_y) | round(method='ceil') | int) + 1 %}
	
	{% if (([points_x, points_y]|max) > 6) %}
	{% set algorithm = "bicubic" %}
	{% set min_points = 4 %}
	{% else %}
	{% set algorithm = "lagrange" %}
	{% set min_points = 3 %}
	{% endif %}
	
	{% set points_x = [points_x , min_points]|max %}
	{% set points_y = [points_y , min_points]|max %}
	{% set points_x = [points_x , probe_count[0]]|min %}
	{% set points_y = [points_y , probe_count[1]]|min %}
	
	{% if verbose_enable == True %}
	{% if printer.exclude_object.objects != [] %}
	
	{ action_respond_info( "Algorithm: {}.".format(
	(algorithm),
	)) }
	
	{ action_respond_info("Default probe count: {},{}.".format(
	(probe_count[0]),
	(probe_count[1]),
	)) }
	
	{ action_respond_info("Adapted probe count: {},{}.".format(
	(points_x),
	(points_y),
	)) }
	
	{action_respond_info("Default mesh bounds: {}, {}.".format(
	(bed_mesh_min[0],bed_mesh_min[1]),
	(bed_mesh_max[0],bed_mesh_max[1]),
	)) }
	
	{% if mesh_margin > 0 %}
	{action_respond_info("Mesh margin is {}, mesh bounds extended by {}mm.".format(
	(mesh_margin),
	(mesh_margin),
	)) }
	{% else %}
	{action_respond_info("Mesh margin is 0, margin not increased.")}
	{% endif %}
	
	{% if fuzz_amount > 0 %}
	{action_respond_info("Mesh point fuzzing enabled, points fuzzed up to {}mm.".format(
	(fuzz_amount),
	)) }
	{% else %}
	{action_respond_info("Fuzz amount is 0, mesh points not fuzzed.")}
	{% endif %}
	
	{ action_respond_info("Adapted mesh bounds: {}, {}.".format(
	(adapted_x_min, adapted_y_min),
	(adapted_x_max, adapted_y_max),
	)) }
	
	{action_respond_info("KAMP adjustments successful. Happy KAMPing!")}
	
	{% else %}
	
	{action_respond_info("No objects detected! Check your gcode and make sure that EXCLUDE_OBJECT_DEFINE is happening before BED_MESH_CALIBRATE is called. Defaulting to regular meshing.")}
	G4 P5000
	{% endif %}
	
	{% endif %}
	
	{% if probe_dock_enable == True %}
	{attach_macro}
	{% endif %}
	
	_BED_MESH_CALIBRATE mesh_min={adapted_x_min},{adapted_y_min} mesh_max={adapted_x_max},{adapted_y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y}
	
	{% if probe_dock_enable == True %}
	{detach_macro}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	
	{% set verbose_enable = printer["gcode_macro _KAMP_Settings"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro _KAMP_Settings"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro _KAMP_Settings"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro _KAMP_Settings"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro _KAMP_Settings"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro _KAMP_Settings"].flow_rate | float %}
	
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	
	{% if cross_section < 5 %}
	
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	
	{% else %}
	
	{% if verbose_enable == True %}
	
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	
	{% if purge_y_origin > 0 %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm/s3.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% else %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm/s3.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% else %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% endif %}
	
	RESTORE_GCODE_STATE NAME=Prepurge_State
	
	{% endif %}

[gcode_macro SMART_PARK]
description = Parks your printhead near the print area for pre-print hotend heating.
gcode = 
	
	{% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}
	{% set z_height = kamp_settings.smart_park_height | float %}
	{% set purge_margin = kamp_settings.purge_margin | float %}
	{% set verbose_enable = kamp_settings.verbose_enable | abs %}
	{% set center_x = printer.toolhead.axis_maximum.x / 2 | float %}
	{% set center_y = printer.toolhead.axis_maximum.y / 2 | float %}
	{% set axis_minimum_x = printer.toolhead.axis_minimum.x | float %}
	{% set axis_minimum_y = printer.toolhead.axis_minimum.y | float %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_min = all_points | map(attribute=0) | min | default(center_x) %}
	{% set y_min = all_points | map(attribute=1) | min | default(center_y) %}
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	
	{% if purge_margin > 0 and x_min != center_x and y_min != center_y %}
	{% set x_min = [ x_min - purge_margin , x_min ] | min %}
	{% set y_min = [ y_min - purge_margin , y_min ] | min %}
	{% set x_min = [ x_min , axis_minimum_x ] | max %}
	{% set y_min = [ y_min , axis_minimum_y ] | max %}
	{% endif %}
	
	
	{% if verbose_enable == True %}
	
	{ action_respond_info("Smart Park location: {},{}.".format(
	(x_min),
	(y_min),
	)) }
	
	{% endif %}
	
	{% if printer.toolhead.position.z < z_height %}
	G0 Z{z_height}
	{% endif %}
	G0 X{x_min} Y{y_min} F{travel_speed}
	G0 Z{z_height}

[gcode_macro _KAMP_Settings]
description = This macro contains all adjustable settings for KAMP
variable_verbose_enable = True
variable_mesh_margin = 5
variable_fuzz_amount = 0
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
variable_purge_height = 0.8
variable_tip_distance = 0
variable_purge_margin = 10
variable_purge_amount = 30
variable_flow_rate = 12
variable_smart_park_height = 10
gcode = 
	
	{action_respond_info(" Running the KAMP_Settings macro does nothing, it is only used for storing KAMP settings. ")}

[stepper_x]
step_pin = PC2
dir_pin = PB9
enable_pin = !PC3
microsteps = 16
rotation_distance = 40
endstop_pin = ^PA5
position_endstop = 0
position_max = 235
homing_speed = 50

[stepper_y]
step_pin = PB8
dir_pin = PB7
enable_pin = !PC3
microsteps = 16
rotation_distance = 40
endstop_pin = ^PA6
position_endstop = 0
position_max = 235
homing_speed = 50

[stepper_z]
step_pin = PB6
dir_pin = !PB5
enable_pin = !PC3
microsteps = 16
rotation_distance = 8
endstop_pin = probe:z_virtual_endstop
position_min = -5
position_max = 220

[extruder]
max_extrude_only_distance = 150.0
step_pin = PB4
dir_pin = PB3
enable_pin = !PC3
microsteps = 16
rotation_distance = 34.406
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PA1
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC5
min_temp = 0
max_temp = 250
pressure_advance = 0.48
control = pid
pid_kp = 27.102
pid_ki = 1.705
pid_kd = 107.731

[heater_bed]
heater_pin = PA2
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC4
min_temp = 0
max_temp = 130
control = pid
pid_kp = 74.327
pid_ki = 1.635
pid_kd = 844.541

[fan]
pin = PA0

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command

[printer]
kinematics = cartesian
max_velocity = 500
max_accel = 4000
max_z_velocity = 10
max_z_accel = 300

[display]
lcd_type = st7920
cs_pin = EXP1_7
sclk_pin = EXP1_6
sid_pin = EXP1_8
encoder_pins = ^EXP1_5, ^EXP1_3
click_pin = ^!EXP1_2

[output_pin beeper]
pin = EXP1_1

[board_pins]
aliases = 
	EXP1_1=PC6,EXP1_3=PB10,EXP1_5=PB14,EXP1_7=PB12,EXP1_9=<GND>,
	EXP1_2=PB2,EXP1_4=PB11,EXP1_6=PB13,EXP1_8=PB15,EXP1_10=<5V>,
	PROBE_IN=PB1,PROBE_OUT=PB0,FIL_RUNOUT=PC6

[bltouch]
sensor_pin = ^PB1
control_pin = PB0
x_offset = -45
y_offset = -7
z_offset = 1.124
probe_with_touch_mode = true
stow_on_each_sample = false
pin_up_touch_mode_reports_triggered = False

[safe_z_home]
home_xy_position = 162.5,124.5
speed = 75
z_hop = 10
z_hop_speed = 5

[bed_mesh]
speed = 120
horizontal_move_z = 5
mesh_min = 15, 15
mesh_max = 188, 191
probe_count = 9,9
algorithm = bicubic
fade_start = 1
fade_end = 10
fade_target = 0

[filament_switch_sensor RUNOUT]
switch_pin = !PA4
pause_on_runout = true
runout_gcode = PAUSE
insert_gcode = 
event_delay = 2.0
pause_delay = 0.2

[screws_tilt_adjust]
screw1 = 76, 38
screw1_name = front left screw
screw2 = 234, 38
screw2_name = front right screw
screw3 = 234, 203
screw3_name = rear right screw
screw4 = 76, 203
screw4_name = rear left screw
horizontal_move_z = 10.
speed = 250.
screw_thread = CW-M4

[bed_mesh default]
version = 1
points = 
	0.095000, 0.092500, 0.085000, 0.087500, 0.075000, 0.057500, 0.067500, 0.027500, 0.002500
	0.045000, 0.022500, 0.042500, 0.030000, 0.007500, -0.002500, -0.012500, -0.007500, -0.010000
	0.075000, 0.100000, 0.062500, 0.067500, 0.042500, 0.027500, 0.032500, 0.012500, 0.002500
	0.065000, 0.117500, 0.052500, 0.015000, -0.002500, -0.012500, -0.007500, -0.017500, -0.010000
	-0.020000, 0.005000, -0.007500, 0.012500, 0.000000, 0.010000, 0.025000, 0.010000, 0.000000
	-0.007500, -0.025000, -0.002500, -0.002500, -0.012500, 0.002500, -0.002500, 0.005000, 0.025000
	-0.007500, -0.005000, 0.015000, 0.030000, 0.045000, 0.057500, 0.067500, 0.055000, 0.050000
	-0.052500, -0.047500, -0.030000, -0.002500, 0.017500, 0.035000, 0.047500, 0.060000, 0.082500
	-0.022500, 0.010000, 0.037500, 0.082500, 0.092500, 0.115000, 0.147500, 0.127500, 0.150000
x_count = 9
y_count = 9
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 15.0
max_x = 187.96
min_y = 15.0
max_y = 191.0
=======================
Extruder max_extrude_ratio=0.266081
mcu 'mcu': Starting serial connect
webhooks client 139869975099616: New connection
webhooks client 139869975099616: Client info {'program': 'Moonraker', 'version': 'v0.8.0-206-g9ad8fed'}
mcu 'mcu': got {'oid': 18, 'next_clock': 3815650560, 'value': 31356, '#name': 'analog_in_state', '#sent_time': 226613.451214229, '#receive_time': 226613.469621019}
mcu 'mcu': got {'oid': 11, 'next_clock': 3832210560, 'value': 31381, '#name': 'analog_in_state', '#sent_time': 226613.688456404, '#receive_time': 226613.700568774}
mcu 'mcu': got {'oid': 18, 'next_clock': 3837250560, 'value': 31360, '#name': 'analog_in_state', '#sent_time': 226613.743560493, '#receive_time': 226613.770486592}
Loaded MCU 'mcu' 112 commands (v0.11.0-304-gf7567a0d / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.35.2-2+14+b2) 2.35.2)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=72000000 MCU=stm32f103xe PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_serial=PA10,PA9 SERIAL_BAUD=250000 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Configured MCU 'mcu' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (60.0, 22.0)    | (15.0, 15.0)
  1   | (81.6, 22.0)    | (36.6, 15.0)
  2   | (103.2, 22.0)   | (58.2, 15.0)
  3   | (124.9, 22.0)   | (79.9, 15.0)
  4   | (146.5, 22.0)   | (101.5, 15.0)
  5   | (168.1, 22.0)   | (123.1, 15.0)
  6   | (189.7, 22.0)   | (144.7, 15.0)
  7   | (211.3, 22.0)   | (166.3, 15.0)
  8   | (233.0, 22.0)   | (188.0, 15.0)
  9   | (233.0, 44.0)   | (188.0, 37.0)
  10  | (211.3, 44.0)   | (166.3, 37.0)
  11  | (189.7, 44.0)   | (144.7, 37.0)
  12  | (168.1, 44.0)   | (123.1, 37.0)
  13  | (146.5, 44.0)   | (101.5, 37.0)
  14  | (124.9, 44.0)   | (79.9, 37.0)
  15  | (103.2, 44.0)   | (58.2, 37.0)
  16  | (81.6, 44.0)    | (36.6, 37.0)
  17  | (60.0, 44.0)    | (15.0, 37.0)
  18  | (60.0, 66.0)    | (15.0, 59.0)
  19  | (81.6, 66.0)    | (36.6, 59.0)
  20  | (103.2, 66.0)   | (58.2, 59.0)
  21  | (124.9, 66.0)   | (79.9, 59.0)
  22  | (146.5, 66.0)   | (101.5, 59.0)
  23  | (168.1, 66.0)   | (123.1, 59.0)
  24  | (189.7, 66.0)   | (144.7, 59.0)
  25  | (211.3, 66.0)   | (166.3, 59.0)
  26  | (233.0, 66.0)   | (188.0, 59.0)
  27  | (233.0, 88.0)   | (188.0, 81.0)
  28  | (211.3, 88.0)   | (166.3, 81.0)
  29  | (189.7, 88.0)   | (144.7, 81.0)
  30  | (168.1, 88.0)   | (123.1, 81.0)
  31  | (146.5, 88.0)   | (101.5, 81.0)
  32  | (124.9, 88.0)   | (79.9, 81.0)
  33  | (103.2, 88.0)   | (58.2, 81.0)
  34  | (81.6, 88.0)    | (36.6, 81.0)
  35  | (60.0, 88.0)    | (15.0, 81.0)
  36  | (60.0, 110.0)   | (15.0, 103.0)
  37  | (81.6, 110.0)   | (36.6, 103.0)
  38  | (103.2, 110.0)  | (58.2, 103.0)
  39  | (124.9, 110.0)  | (79.9, 103.0)
  40  | (146.5, 110.0)  | (101.5, 103.0)
  41  | (168.1, 110.0)  | (123.1, 103.0)
  42  | (189.7, 110.0)  | (144.7, 103.0)
  43  | (211.3, 110.0)  | (166.3, 103.0)
  44  | (233.0, 110.0)  | (188.0, 103.0)
  45  | (233.0, 132.0)  | (188.0, 125.0)
  46  | (211.3, 132.0)  | (166.3, 125.0)
  47  | (189.7, 132.0)  | (144.7, 125.0)
  48  | (168.1, 132.0)  | (123.1, 125.0)
  49  | (146.5, 132.0)  | (101.5, 125.0)
  50  | (124.9, 132.0)  | (79.9, 125.0)
  51  | (103.2, 132.0)  | (58.2, 125.0)
  52  | (81.6, 132.0)   | (36.6, 125.0)
  53  | (60.0, 132.0)   | (15.0, 125.0)
  54  | (60.0, 154.0)   | (15.0, 147.0)
  55  | (81.6, 154.0)   | (36.6, 147.0)
  56  | (103.2, 154.0)  | (58.2, 147.0)
  57  | (124.9, 154.0)  | (79.9, 147.0)
  58  | (146.5, 154.0)  | (101.5, 147.0)
  59  | (168.1, 154.0)  | (123.1, 147.0)
  60  | (189.7, 154.0)  | (144.7, 147.0)
  61  | (211.3, 154.0)  | (166.3, 147.0)
  62  | (233.0, 154.0)  | (188.0, 147.0)
  63  | (233.0, 176.0)  | (188.0, 169.0)
  64  | (211.3, 176.0)  | (166.3, 169.0)
  65  | (189.7, 176.0)  | (144.7, 169.0)
  66  | (168.1, 176.0)  | (123.1, 169.0)
  67  | (146.5, 176.0)  | (101.5, 169.0)
  68  | (124.9, 176.0)  | (79.9, 169.0)
  69  | (103.2, 176.0)  | (58.2, 169.0)
  70  | (81.6, 176.0)   | (36.6, 169.0)
  71  | (60.0, 176.0)   | (15.0, 169.0)
  72  | (60.0, 198.0)   | (15.0, 191.0)
  73  | (81.6, 198.0)   | (36.6, 191.0)
  74  | (103.2, 198.0)  | (58.2, 191.0)
  75  | (124.9, 198.0)  | (79.9, 191.0)
  76  | (146.5, 198.0)  | (101.5, 191.0)
  77  | (168.1, 198.0)  | (123.1, 191.0)
  78  | (189.7, 198.0)  | (144.7, 191.0)
  79  | (211.3, 198.0)  | (166.3, 191.0)
  80  | (233.0, 198.0)  | (188.0, 191.0)
Starting heater checks for extruder
webhooks: registering remote method 'shutdown_machine' for connection id: 139869975099616
webhooks: registering remote method 'reboot_machine' for connection id: 139869975099616
webhooks: registering remote method 'pause_job_queue' for connection id: 139869975099616
webhooks: registering remote method 'start_job_queue' for connection id: 139869975099616
